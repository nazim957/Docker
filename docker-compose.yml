version: "3.9"
services:
#  mysql-service:
#    image: mysql:latest
#    ports:
#      - "3307:3306"
#    container_name: mysql-container
#    networks:
#      - user-net
#    environment:
#      MYSQL_ROOT_PASSWORD: root
#      MYSQL_USERNAME: root
#      MYSQL_PASSWORD: root
#      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
#      MYSQL_PORT: 3306
#    volumes:
#      - ./data:/var/lib/mysql
#
#
#  mongodbservice:
#    image: mongo:latest
#    container_name: mongo-container
#    networks:
#      - user-net
#    ports:
#      - "27018:27017"
#    volumes:
#      - ./data:/var/lib/mongo
#
#  rabbitmq:
#    image: rabbitmq:3.8
#    container_name: rabbitmq-container
#    networks:
#      - user-net
#    ports:
#      - "5672:5672"
#      - "15672:15672"  # Management plugin
#    restart: always
#
#  userprofileservice:
#      container_name: user-profile-service
#      build: UserProfileService/
#      networks:
#        - user-net
#      environment:
#        - spring.data.mongodb.uri=mongodb://mongodbservice:27017
#        - spring.data.mongodb.database=UserProfileService
#        - spring.rabbitmq.host=rabbitmq
#        - spring.rabbitmq.port=5672
#        - spring.rabbitmq.username=guest
#        - spring.rabbitmq.password=guest
#      ports:
#        - "8081:8081"
#      depends_on:
#        - mongodbservice
#        - rabbitmq
#      restart: always
#
#  authentication-service:
#      container_name: authentication-service
#      build: ./AuthenticationService
#      networks:
#        - user-net
#      environment:
#        - spring.datasource.url=jdbc:mysql://mysql-service:3306/AuthenticationService?createDatabaseIfNotExist=true
#        - spring.datasource.username=root
#        - spring.datasource.password=root
#        - spring.rabbitmq.host=rabbitmq
#        - spring.rabbitmq.port=5672
#        - spring.rabbitmq.username=guest
#        - spring.rabbitmq.password=guest
#      ports:
#        - "8080:8080"
#      depends_on:
#        - mysql-service
#        - rabbitmq
#      restart: always
#
#  wishlist-service:
#    container_name: wishlist-service
#    build: ./WishlistService
#    networks:
#      - user-net
#    environment:
#      - spring.datasource.url = jdbc:mysql://mysql-service:3306/WishlistService?createDatabaseIfNotExist=true
#      - spring.datasource.username=root
#      - spring.datasource.password=root
#    ports:
#      - "8082:8082"
#    depends_on:
#      - mysql-service
#    restart: always

  news-service:
    container_name: news-service
    build: ./NewsService
    networks:
      - user-net
    ports:
      - "8083:8083"

networks:
  user-net:
    driver: bridge



